/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package elcaro;

import java.awt.Frame;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileFilter;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author Alexy Cruz
 */
public class ElCaro extends javax.swing.JFrame {

    /**
     * Creates new form ElCaro
     */
    public ElCaro() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_Crear = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jsp_ARLF_NumeroCampos = new javax.swing.JSpinner();
        jsp_ARLF_LongitudCampos = new javax.swing.JSpinner();
        jb_Crear_Tabla_Fijo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_ARLF_Tabla = new javax.swing.JTable();
        jb_Agregar_Campo_Fijo = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nombre_arlf = new javax.swing.JTextField();
        jb_Cargar_tabla_Fijo = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jt_ARLV_Nombre = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jsp_ARLV_NumeroCampos = new javax.swing.JSpinner();
        jb_ARLV_CrearTabla = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        D = new javax.swing.JRadioButton();
        I = new javax.swing.JRadioButton();
        K = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_ARLV_tabla = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jrb_ARLV_Indices_Si = new javax.swing.JRadioButton();
        jrb_ARLV_Indices_No = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jpm_ARLF = new javax.swing.JPopupMenu();
        jpm_ARLF_Modificar = new javax.swing.JMenuItem();
        jpm_seleccionar_ARLF = new javax.swing.JMenuItem();
        jpm_borrar_registro_ARLF = new javax.swing.JMenuItem();
        bg_ARLV_ManejoTabla = new javax.swing.ButtonGroup();
        jpm_ARLV = new javax.swing.JPopupMenu();
        jpm_ARLV_Modificar = new javax.swing.JMenuItem();
        jpm_ARLV_Seleccionar = new javax.swing.JMenuItem();
        jpm_ARLV_Borrar_Registro = new javax.swing.JMenuItem();
        bg_ARLV_TablaIndices = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        jd_Crear.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jd_Crear.setTitle("ELCARO BASE DE DATOS");
        jd_Crear.setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Numero de campos");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 91, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Longitud de campos");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 129, -1, -1));

        jsp_ARLF_NumeroCampos.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jPanel1.add(jsp_ARLF_NumeroCampos, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 52, -1));

        jsp_ARLF_LongitudCampos.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jPanel1.add(jsp_ARLF_LongitudCampos, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 52, -1));

        jb_Crear_Tabla_Fijo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/database-logo.png"))); // NOI18N
        jb_Crear_Tabla_Fijo.setText("Crear Tabla");
        jb_Crear_Tabla_Fijo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_Crear_Tabla_FijoMouseClicked(evt);
            }
        });
        jPanel1.add(jb_Crear_Tabla_Fijo, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 64, 146, 44));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 157, 773, 10));

        jt_ARLF_Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jt_ARLF_Tabla.setCellSelectionEnabled(true);
        jt_ARLF_Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_ARLF_TablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jt_ARLF_Tabla);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 228, 753, 462));

        jb_Agregar_Campo_Fijo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/database-logo.png"))); // NOI18N
        jb_Agregar_Campo_Fijo.setText("AGREGAR REGISTRO");
        jb_Agregar_Campo_Fijo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_Agregar_Campo_FijoMouseClicked(evt);
            }
        });
        jPanel1.add(jb_Agregar_Campo_Fijo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Nombre");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 53, -1, -1));
        jPanel1.add(nombre_arlf, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 50, 117, -1));

        jb_Cargar_tabla_Fijo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/database-logo.png"))); // NOI18N
        jb_Cargar_tabla_Fijo.setText("CARGAR TABLA");
        jb_Cargar_tabla_Fijo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_Cargar_tabla_FijoMouseClicked(evt);
            }
        });
        jPanel1.add(jb_Cargar_tabla_Fijo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 160, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/4040961-database-wallpapers_JD_DIALOG.jpg"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 710));

        jTabbedPane1.addTab("ARLF", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("Nombre");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 46, -1, -1));
        jPanel2.add(jt_ARLV_Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 43, 116, -1));
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 210, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Numero de Campos");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 84, -1, -1));

        jsp_ARLV_NumeroCampos.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jPanel2.add(jsp_ARLV_NumeroCampos, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 81, 39, -1));

        jb_ARLV_CrearTabla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/database-logo.png"))); // NOI18N
        jb_ARLV_CrearTabla.setText("Crear Tabla");
        jb_ARLV_CrearTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_ARLV_CrearTablaMouseClicked(evt);
            }
        });
        jPanel2.add(jb_ARLV_CrearTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 40, -1, 47));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Manejo de Tabla");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 123, -1, -1));

        bg_ARLV_ManejoTabla.add(D);
        D.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        D.setForeground(new java.awt.Color(240, 240, 240));
        D.setSelected(true);
        D.setText("Delimitador");
        jPanel2.add(D, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 119, -1, -1));

        bg_ARLV_ManejoTabla.add(I);
        I.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        I.setForeground(new java.awt.Color(240, 240, 240));
        I.setText("Indicador de longitud");
        jPanel2.add(I, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 119, -1, -1));

        bg_ARLV_ManejoTabla.add(K);
        K.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        K.setForeground(new java.awt.Color(240, 240, 240));
        K.setText("Key Value");
        jPanel2.add(K, new org.netbeans.lib.awtextra.AbsoluteConstraints(248, 119, -1, -1));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 194, 763, 10));

        jt_ARLV_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jt_ARLV_tabla.setCellSelectionEnabled(true);
        jt_ARLV_tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_ARLV_tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jt_ARLV_tabla);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 277, 743, 425));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/database-logo.png"))); // NOI18N
        jButton5.setText("AGREGAR REGISTRO");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jPanel2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, 50));

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/database-logo.png"))); // NOI18N
        jButton6.setText("CARGAR TABLA");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 174, 50));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(240, 240, 240));
        jLabel10.setText("Tabla de indices");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 157, -1, -1));

        bg_ARLV_TablaIndices.add(jrb_ARLV_Indices_Si);
        jrb_ARLV_Indices_Si.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jrb_ARLV_Indices_Si.setForeground(new java.awt.Color(240, 240, 240));
        jrb_ARLV_Indices_Si.setSelected(true);
        jrb_ARLV_Indices_Si.setText("Si");
        jPanel2.add(jrb_ARLV_Indices_Si, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 153, -1, -1));

        bg_ARLV_TablaIndices.add(jrb_ARLV_Indices_No);
        jrb_ARLV_Indices_No.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jrb_ARLV_Indices_No.setForeground(new java.awt.Color(240, 240, 240));
        jrb_ARLV_Indices_No.setText("No");
        jPanel2.add(jrb_ARLV_Indices_No, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 153, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/4040961-database-wallpapers_JD_DIALOG.jpg"))); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 710));

        jTabbedPane1.addTab("ARLV", jPanel2);

        javax.swing.GroupLayout jd_CrearLayout = new javax.swing.GroupLayout(jd_Crear.getContentPane());
        jd_Crear.getContentPane().setLayout(jd_CrearLayout);
        jd_CrearLayout.setHorizontalGroup(
            jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_CrearLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jd_CrearLayout.setVerticalGroup(
            jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpm_ARLF_Modificar.setText("Modificar");
        jpm_ARLF_Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpm_ARLF_ModificarActionPerformed(evt);
            }
        });
        jpm_ARLF.add(jpm_ARLF_Modificar);

        jpm_seleccionar_ARLF.setText("Seleccionar Registro");
        jpm_seleccionar_ARLF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpm_seleccionar_ARLFActionPerformed(evt);
            }
        });
        jpm_ARLF.add(jpm_seleccionar_ARLF);

        jpm_borrar_registro_ARLF.setText("Borrar Registro");
        jpm_borrar_registro_ARLF.setEnabled(false);
        jpm_borrar_registro_ARLF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpm_borrar_registro_ARLFActionPerformed(evt);
            }
        });
        jpm_ARLF.add(jpm_borrar_registro_ARLF);

        jpm_ARLV_Modificar.setText("Modificar");
        jpm_ARLV_Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpm_ARLV_ModificarActionPerformed(evt);
            }
        });
        jpm_ARLV.add(jpm_ARLV_Modificar);

        jpm_ARLV_Seleccionar.setText("Seleccionar");
        jpm_ARLV_Seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpm_ARLV_SeleccionarActionPerformed(evt);
            }
        });
        jpm_ARLV.add(jpm_ARLV_Seleccionar);

        jpm_ARLV_Borrar_Registro.setText("Borrar Registro");
        jpm_ARLV_Borrar_Registro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpm_ARLV_Borrar_RegistroActionPerformed(evt);
            }
        });
        jpm_ARLV.add(jpm_ARLV_Borrar_Registro);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ElCaro ©");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/images.png"))); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 220, 70));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/data-1.jpg"))); // NOI18N
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 430));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        jd_Crear.setModal(true);
        jd_Crear.pack();
        jd_Crear.setLocationRelativeTo(this);
        jd_Crear.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jb_Crear_Tabla_FijoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_Crear_Tabla_FijoMouseClicked
        // TODO add your handling code here:
        if (ValidarAgregar(nombre_arlf)) {
            String Direccion = nombre_arlf.getText() + ".txt";
            String Borrado = "./borrados/" + nombre_arlf.getText() + "borr" + ".txt";
            fijo_fijo.setDireccion(Direccion);
            System.out.println(fijo_fijo.getDireccion());
            File Archivo = null, Archivo_b = null;
            Archivo = new File(Direccion);
            Archivo_b = new File(Borrado);
            RandomAccessFile RAF = null;
            RandomAccessFile RAF2 = null;
            try {
                RAF = new RandomAccessFile(Archivo, "rw");
                RAF2 = new RandomAccessFile(Archivo_b, "rw");
                RAF.writeBytes(jsp_ARLF_NumeroCampos.getValue().toString());
                RAF2.writeBytes("$");
                RAF.seek(RAF.length());
                RAF.writeBytes(";");
                RAF.writeBytes(jsp_ARLF_LongitudCampos.getValue().toString());
                RAF.seek(RAF.length());
                RAF.writeBytes(";");

            } catch (FileNotFoundException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            }

            DefaultTableModel Modelo = new DefaultTableModel();
            int NumeroCampos = (int) (jsp_ARLF_NumeroCampos.getValue());

            for (int i = 0; i < NumeroCampos; i++) {
                String NombreCampo = JOptionPane.showInputDialog(jd_Crear,
                        "Ingrese el nombre del campo", "NOMBRE DE CAMPO", JOptionPane.INFORMATION_MESSAGE);
                Modelo.addColumn(NombreCampo);
                try {
                    RAF.seek(RAF.length());
                    RAF.writeBytes(NombreCampo);
                    RAF.writeBytes(";");
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            jt_ARLF_Tabla.setModel(Modelo);
        } else {
            JOptionPane.showMessageDialog(jd_Crear, "Debe ingresar un nombre para su tabla");
        }
    }//GEN-LAST:event_jb_Crear_Tabla_FijoMouseClicked

    private void jt_ARLF_TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_ARLF_TablaMouseClicked
        // TODO add your handling code here:
        int Row = jt_ARLF_Tabla.getSelectedRow();
        int Column = jt_ARLF_Tabla.getSelectedColumn();

        if (evt.isMetaDown() && jt_ARLF_Tabla.getSelectedRow() != -1) {

            DefaultTableModel Modelo = (DefaultTableModel) jt_ARLF_Tabla.getModel();

            jpm_ARLF.show(evt.getComponent(), evt.getX(),
                    evt.getY());
        } else {
            jpm_borrar_registro_ARLF.setEnabled(false);
        }

        System.out.println(Row + " " + Column);
    }//GEN-LAST:event_jt_ARLF_TablaMouseClicked

    private void jb_Agregar_Campo_FijoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_Agregar_Campo_FijoMouseClicked
        if (fijo_fijo.Borrados.empty()) {

            int RevisarCampos = 0;
            DefaultTableModel ModeloTabla = (DefaultTableModel) jt_ARLF_Tabla.getModel();
            Object[] Row = new Object[jt_ARLF_Tabla.getColumnCount()];
            ArrayList<String> Campos = new ArrayList();
            for (int i = 0; i < jt_ARLF_Tabla.getColumnCount(); i++) {
                String Campo = JOptionPane.showInputDialog(jd_Crear, "Ingrese el " + jt_ARLF_Tabla.getModel().getColumnName(i),
                        jt_ARLF_Tabla.getModel().getColumnName(i), JOptionPane.INFORMATION_MESSAGE);

                Campos.add(Campo);
            }
            for (int i = 0; i < Campos.size(); i++) {
                if (Campos.get(i).length() > Integer.parseInt(fijo_fijo.TamañoCampo())) {
                    RevisarCampos++;
                } else if (Campos.get(i).length() > Integer.parseInt(fijo_fijo.TamañoCampo())) {
                    RevisarCampos++;
                }
            }

            if (RevisarCampos == 0) {
                for (int i = 0; i < Campos.size(); i++) {
                    System.out.println(fijo_fijo.TamañoCampo());
                    if (Campos.get(i).length() < Integer.parseInt(fijo_fijo.TamañoCampo())) {
                        Row[i] = Campos.get(i);
                        for (int j = 0; j < Integer.parseInt(fijo_fijo.TamañoCampo()) - Campos.get(i).length(); j++) {
                            Row[i] = Row[i] + "-";
                        }
                    } else {
                        Row[i] = Campos.get(i);
                    }
                    File Archivo = null;
                    Archivo = new File(fijo_fijo.getDireccion());
                    RandomAccessFile RAF = null;
                    try {
                        RAF = new RandomAccessFile(Archivo, "rw");
                        fijo_fijo.Agregar(Row[i].toString(), RAF.length());
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    if (i == Campos.size() - 1) {
                        ModeloTabla.addRow(Row);
                    }

                }
                JOptionPane.showMessageDialog(jd_Crear, "Se Agrego un Registro");
            } else {
                JOptionPane.showMessageDialog(jd_Crear, "No se pudo agregar registro");
            }
        } else {
            int posicion = fijo_fijo.Borrados.pop();

            int RevisarCampos = 0;
            String nuevo_c = "";
            String[] row = new String[Integer.parseInt(fijo_fijo.NumeroCampos())];
            ArrayList<String> Campos = new ArrayList();
            for (int i = 0; i < jt_ARLF_Tabla.getColumnCount(); i++) {
                String Campo = JOptionPane.showInputDialog(jd_Crear, "Ingrese el " + jt_ARLF_Tabla.getModel().getColumnName(i),
                        jt_ARLF_Tabla.getModel().getColumnName(i), JOptionPane.INFORMATION_MESSAGE);

                Campos.add(Campo);
                nuevo_c = nuevo_c + Campo;
                for (int j = 0; j < Integer.parseInt(fijo_fijo.TamañoCampo()) - Campos.get(i).length(); j++) {
                    nuevo_c = nuevo_c + "-";
                    Campo = Campo + "-";
                }
                row[i] = Campo;
            }
            for (int i = 0; i < Campos.size(); i++) {
                if (Campos.get(i).length() > Integer.parseInt(fijo_fijo.TamañoCampo())) {
                    RevisarCampos++;
                } else if (Campos.get(i).length() > Integer.parseInt(fijo_fijo.TamañoCampo())) {
                    RevisarCampos++;
                }
            }

            if (RevisarCampos == 0) {
                File Archivo = null;
                File Archivo2 = null;
                Archivo = new File("./borrados/" + fijo_fijo.Direccion.substring(0, fijo_fijo.Direccion.length() - 4) + "borr.txt");
                Archivo2 = new File(fijo_fijo.Direccion);
                RandomAccessFile RAF = null, RAF2 = null;
                int cont1 = 0;

                long temp = posicion * Integer.parseInt(fijo_fijo.TamañoCampo()) * Integer.parseInt(fijo_fijo.NumeroCampos());

                try {
                    RAF = new RandomAccessFile(Archivo, "rw");
                    RAF2 = new RandomAccessFile(Archivo2, "rw");
                    for (int i = 0; i < RAF2.length(); i++) {
                        RAF2.seek(i);
                        if ((char) RAF2.readByte() == ';') {
                            cont1++;
                        }
                        if (cont1 == 2 + Integer.parseInt(fijo_fijo.NumeroCampos())) {
                            System.out.println(i);
                            RAF2.seek(i + temp + 1);
                            break;
                        }
                    }
                    RAF2.writeBytes(nuevo_c);
                    RAF.seek(RAF.length() - 1);
                    RAF.writeBytes("");
                    RAF.seek(RAF.length() - 1);
                    RAF.writeBytes("");
                    RAF.seek(RAF.length() - 1);
                    RAF.writeBytes("");
                    if (fijo_fijo.Borrados.empty()) {
                        RAF.setLength(0);
                        RAF.writeBytes("$");
                    }
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                }
                for (int i = 0; i < Integer.parseInt(fijo_fijo.NumeroCampos()); i++) {
                    jt_ARLF_Tabla.setValueAt(row[i], posicion, i);
                }

                JOptionPane.showMessageDialog(jd_Crear, "Se Agrego un Registro");
            } else {
                fijo_fijo.Borrados.add(posicion);
                JOptionPane.showMessageDialog(jd_Crear, "No se pudo agregar registro");
            }
        }
    }//GEN-LAST:event_jb_Agregar_Campo_FijoMouseClicked

    private void jpm_ARLF_ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpm_ARLF_ModificarActionPerformed
        // TODO add your handling code here:
        if (jt_ARLF_Tabla.getValueAt(jt_ARLF_Tabla.getSelectedRow(),
                jt_ARLF_Tabla.getSelectedColumn()) != " ") {

            DefaultTableModel ModeloTabla = (DefaultTableModel) jt_ARLF_Tabla.getModel();

            String Campo = ModeloTabla.getColumnName(jt_ARLF_Tabla.getSelectedColumn());

            String ModificarCampo = JOptionPane.showInputDialog(jd_Crear, "Ingrese el " + Campo, Campo.toUpperCase(),
                    JOptionPane.INFORMATION_MESSAGE);
            int Concatenar = Integer.parseInt(fijo_fijo.TamañoCampo()) - ModificarCampo.length();
            for (int j = 0; j < Concatenar; j++) {
                ModificarCampo += "-";
            }
            if (ModificarCampo.length() <= Integer.parseInt(fijo_fijo.TamañoCampo())) {
                jt_ARLF_Tabla.setValueAt(ModificarCampo, jt_ARLF_Tabla.getSelectedRow(),
                        jt_ARLF_Tabla.getSelectedColumn());

                File Archivo = null;
                Archivo = new File(fijo_fijo.getDireccion());
                RandomAccessFile RAF = null;
                try {
                    RAF = new RandomAccessFile(Archivo, "rw");
                    String TamañoCampo = "";
                    int Posicion = (jt_ARLF_Tabla.getSelectedRow()
                            * Integer.parseInt(fijo_fijo.NumeroCampos())
                            * Integer.parseInt(fijo_fijo.TamañoCampo()))
                            + (jt_ARLF_Tabla.getSelectedColumn()
                            * Integer.parseInt(fijo_fijo.TamañoCampo()));

                    RAF.seek(Posicion + fijo_fijo.GetPosInicial());
                    RAF.writeBytes(ModificarCampo);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(jd_Crear, "No se pudo modificar campo");
            }
        } else {
            JOptionPane.showMessageDialog(jd_Crear, "En esta Posicion No Existe Un Registro");
        }
    }//GEN-LAST:event_jpm_ARLF_ModificarActionPerformed

    private void jpm_seleccionar_ARLFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpm_seleccionar_ARLFActionPerformed
        //jt_ARLF_ModificarTabla.setCellSelectionEnabled(false);
        jt_ARLF_Tabla.setColumnSelectionInterval(0, Integer.parseInt(fijo_fijo.NumeroCampos()) - 1);
        jpm_borrar_registro_ARLF.setEnabled(true);
        //jt_ARLF_ModificarTabla.clearSelection();
    }//GEN-LAST:event_jpm_seleccionar_ARLFActionPerformed

    private void jpm_borrar_registro_ARLFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpm_borrar_registro_ARLFActionPerformed
        if (jpm_borrar_registro_ARLF.isEnabled() && jt_ARLF_Tabla.getValueAt(jt_ARLF_Tabla.getSelectedRow(),
                jt_ARLF_Tabla.getSelectedColumn()) != " ") {
            int seleccionado = jt_ARLF_Tabla.getSelectedRow();
            fijo_fijo.getBorrados().push(seleccionado);
            String direccion = "";
            direccion = fijo_fijo.getDireccion().substring(0, fijo_fijo.getDireccion().length() - 4);
            System.out.println(direccion);
            String Borrado = "./borrados/" + direccion + "borr" + ".txt";
            System.out.println(Borrado);
            File Archivo_b = null;

            Archivo_b = new File(Borrado);
            RandomAccessFile RAF2 = null;
            try {
                RAF2 = new RandomAccessFile(Archivo_b, "rw");
                RAF2.seek(0);
                if ((char) RAF2.readByte() == '$') {
                    RAF2.seek(RAF2.length() - 1);
                    RAF2.writeBytes(Integer.toString(seleccionado) + ";");
                } else {
                    RAF2.seek(RAF2.length());
                    RAF2.writeBytes(Integer.toString(seleccionado) + ";");
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            }

            for (int i = 0; i < jt_ARLF_Tabla.getColumnCount(); i++) {
                jt_ARLF_Tabla.setValueAt(" ", jt_ARLF_Tabla.getSelectedRow(),
                        jt_ARLF_Tabla.getSelectedColumn() + i);
            }
        } else {
            JOptionPane.showMessageDialog(jd_Crear, "Ese Registro Ya Ha Sido Borrado!");
        }
        jpm_borrar_registro_ARLF.setEnabled(false);
    }//GEN-LAST:event_jpm_borrar_registro_ARLFActionPerformed

    private void jb_Cargar_tabla_FijoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_Cargar_tabla_FijoMouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Elija el archivo de texto");

        File Archivo_Referencia = null;
        Archivo_Referencia = new File("./");

        fileChooser.setCurrentDirectory(Archivo_Referencia);
        int returnValue = fileChooser.showOpenDialog(jd_Crear);

        File selectedFile = fileChooser.getSelectedFile();
        String DireccionArchivo = selectedFile.getAbsolutePath();
        fijo_fijo.setDireccion(DireccionArchivo);

        if (returnValue == JFileChooser.APPROVE_OPTION && fileChooser.getSelectedFile().getName().endsWith(".txt")
                && fijo_fijo.IsFija(fileChooser.getSelectedFile())) {
            String NombreArchivoBorrado = selectedFile.getName();
            NombreArchivoBorrado = NombreArchivoBorrado.substring(0, NombreArchivoBorrado.length() - 4);

            String DireccionBorrado = "./borrados/" + NombreArchivoBorrado + "borr" + ".txt";

            DefaultTableModel Modelo = new DefaultTableModel();
            fijo_fijo.setDireccion(DireccionArchivo);
            DefaultTableModel ModeloTabla = fijo_fijo.CargarArchivoFijo(DireccionArchivo, DireccionBorrado, Modelo);
            jt_ARLF_Tabla.setModel(Modelo);
            Modelo.removeRow(Modelo.getRowCount() - 1);
            String NombreArchivoFijo = selectedFile.getName();
            fijo_fijo.setDireccion(NombreArchivoFijo);

        } else {
            JOptionPane.showMessageDialog(jd_Crear, "Elige un archivo de texto y una tabla de longitud fija");
        }
    }//GEN-LAST:event_jb_Cargar_tabla_FijoMouseClicked

    private void jb_ARLV_CrearTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_ARLV_CrearTablaMouseClicked
        // TODO add your handling code here:
        if (ValidarAgregar(jt_ARLV_Nombre)) {
            String Direccion = jt_ARLV_Nombre.getText() + ".txt";
            String Borrado = "./borradosvv/" + jt_ARLV_Nombre.getText() + "borr" + ".txt";
            String Cargado = "./cargar/" + jt_ARLV_Nombre.getText() + "car.txt";

            variable_variable.setDireccion(Direccion);
            if (D.isSelected()) {
                variable_variable.setManejo('D');
            } else if (K.isSelected()) {
                variable_variable.setManejo('K');
            } else {
                variable_variable.setManejo('I');
            }

            String Manejo = "";
            Manejo += variable_variable.getManejo();
            System.out.println(variable_variable.getDireccion());
            File Archivo = null, Archivo_b = null, Archivo_c;
            Archivo = new File(Direccion);
            Archivo_b = new File(Borrado);
            Archivo_c = new File(Cargado);
            RandomAccessFile RAF = null;
            RandomAccessFile RAF2 = null;
            RandomAccessFile RAF3 = null;
            try {
                RAF = new RandomAccessFile(Archivo, "rw");
                RAF2 = new RandomAccessFile(Archivo_b, "rw");
                RAF3 = new RandomAccessFile(Archivo_c, "rw");
                RAF3.writeBytes(jsp_ARLV_NumeroCampos.getValue().toString());
                RAF3.writeBytes(";");
                RAF.writeBytes(jsp_ARLV_NumeroCampos.getValue().toString());
                RAF2.writeBytes("$");
                RAF.seek(RAF.length());
                RAF.writeBytes(":");
                RAF.writeBytes(Manejo);
                RAF.writeBytes(":");

            } catch (FileNotFoundException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            }

            DefaultTableModel Modelo = new DefaultTableModel();
            int NumeroCampos = (int) (jsp_ARLV_NumeroCampos.getValue());

            for (int i = 0; i < NumeroCampos; i++) {
                String NombreCampo = JOptionPane.showInputDialog(jd_Crear,
                        "Ingrese el nombre del campo", "NOMBRE DE CAMPO", JOptionPane.INFORMATION_MESSAGE);
                Modelo.addColumn(NombreCampo);
                try {
                    RAF.seek(RAF.length());
                    RAF3.seek(RAF3.length());
                    RAF.writeBytes(NombreCampo);
                    RAF3.writeBytes(NombreCampo);
                    RAF.writeBytes(":");
                    RAF3.writeBytes(";");
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            System.out.println(variable_variable.GetPosInicial());
            jt_ARLV_tabla.setModel(Modelo);
        } else {
            JOptionPane.showMessageDialog(jd_Crear, "Debe ingresar un nombre para su tabla");
        }
    }//GEN-LAST:event_jb_ARLV_CrearTablaMouseClicked

    private void jt_ARLV_tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_ARLV_tablaMouseClicked
        // TODO add your handling code here:
        int Row = jt_ARLV_tabla.getSelectedRow();
        int Column = jt_ARLV_tabla.getSelectedColumn();

        if (evt.isMetaDown() && jt_ARLV_tabla.getSelectedRow() != -1) {

            DefaultTableModel Modelo = (DefaultTableModel) jt_ARLV_tabla.getModel();

            jpm_ARLV.show(evt.getComponent(), evt.getX(),
                    evt.getY());
        } else {
            jpm_ARLV_Borrar_Registro.setEnabled(false);
        }

        System.out.println(Row + " " + Column);
    }//GEN-LAST:event_jt_ARLV_tablaMouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        if (variable_variable.borrados.isEmpty()) {
            int RevisarCampos = 0;
            DefaultTableModel ModeloTabla = (DefaultTableModel) jt_ARLV_tabla.getModel();
            Object[] Row = new Object[jt_ARLV_tabla.getColumnCount()];
            ArrayList<String> Campos = new ArrayList();
            for (int i = 0; i < jt_ARLV_tabla.getColumnCount(); i++) {
                String Campo = JOptionPane.showInputDialog(jd_Crear, "Ingrese el " + jt_ARLV_tabla.getModel().getColumnName(i),
                        jt_ARLV_tabla.getModel().getColumnName(i), JOptionPane.INFORMATION_MESSAGE);
                Row[i] = Campo;
                Campos.add(Campo);
            }
            for (int i = 0; i < Campos.size(); i++) {
                RevisarCampos++;
            }
            if (RevisarCampos != 0) {
                for (int i = 0; i < Campos.size(); i++) {
                    File Archivo = null, archivo2 = null;
                    Archivo = new File(variable_variable.getDireccion());
                    archivo2 = new File("./cargar/" + variable_variable.getDireccion().substring(0, variable_variable.getDireccion().length() - 4) + "car.txt");

                    RandomAccessFile RAF = null;
                    RandomAccessFile RAF2 = null;
                    try {
                        RAF = new RandomAccessFile(Archivo, "rw");
                        RAF2 = new RandomAccessFile(archivo2, "rw");
                        Agregard(Row[i].toString(), RAF.length(), i);

                        RAF.seek(RAF.length());
                        RAF2.seek(RAF2.length());
                        RAF2.writeBytes(Row[i].toString() + ":");
                        if (i == Campos.size() - 1) {
                            RAF.writeBytes("'");
                        }

                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    if (i == Campos.size() - 1) {
                        ModeloTabla.addRow(Row);
                    }

                }

                //System.out.println(variable_variable.GetTamañoCampo(0));
                //System.out.println(variable_variable.GetTamañoCampo(1));
                JOptionPane.showMessageDialog(jd_Crear, "Se Agrego un Registro");

            } else {
                JOptionPane.showMessageDialog(jd_Crear, "No se pudo agregar registro");
            }

        } else {

        }
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Elija el archivo de texto");

        File Archivo_Referencia = null;
        Archivo_Referencia = new File("./");

        fileChooser.setCurrentDirectory(Archivo_Referencia);
        int returnValue = fileChooser.showOpenDialog(jd_Crear);

        File selectedFile = fileChooser.getSelectedFile();
        String DireccionArchivo = selectedFile.getAbsolutePath();
        variable_variable.setDireccion(DireccionArchivo);

        if (returnValue == JFileChooser.APPROVE_OPTION && fileChooser.getSelectedFile().getName().endsWith(".txt")
                && variable_variable.IsVariable(fileChooser.getSelectedFile())) {
            String NombreArchivo = selectedFile.getName().substring(0, selectedFile.getName().length() - 4);
            String Cargar = "./Cargar/" + NombreArchivo + "car.txt";
            File ArchivoCargar = new File(Cargar);
            RandomAccessFile RAF = null;

            try {
                RAF = new RandomAccessFile(ArchivoCargar, "rw");
                int NumeroCampos = 0;
                ArrayList Headers = new ArrayList();
                ArrayList Campos = new ArrayList();
                int PosicionInicial = 0;
                int ContadorDelimitador = 0;

                for (int i = 0; i < RAF.length(); i++) {
                    RAF.seek(i);
                    char CharRevisar = (char) RAF.readByte();
                    if (CharRevisar != ';' && ContadorDelimitador == 0) {
                        String Temp = "";
                        Temp += CharRevisar;
                        System.out.println("Asi va el Numero de campos: " + Temp);
                        NumeroCampos = Integer.parseInt(Temp);
                        PosicionInicial = i;
                    } else {
                        ContadorDelimitador++;
                    }
                }

                String Temp = "";
                ContadorDelimitador = 0;

                for (int i = PosicionInicial + 1; i < RAF.length(); i++) {
                    RAF.seek(i);
                    char CharRevisar = (char) RAF.readByte();

                    if (CharRevisar != ';' && ContadorDelimitador < 2) {
                        Temp += CharRevisar;
                        System.out.println("Asi va el header: " + Temp);
                    } else {
                        if (!Temp.isEmpty()) {
                            Headers.add(Temp);
                        }
                        Temp = "";
                        PosicionInicial = i + 1;
                    }
                }

                Temp = "";
                System.out.println("Posicion Inicial: " + PosicionInicial);
                for (int i = PosicionInicial; i < RAF.length(); i++) {
                    RAF.seek(i);
                    char CharRevisar = (char) RAF.readByte();

                    if (CharRevisar != ':') {
                        Temp += CharRevisar;
                        System.out.println("Asi va el Campo: " + Temp);
                    } else {
                        Campos.add(Temp);
                        Temp = "";

                    }
                }

                DefaultTableModel Modelo = new DefaultTableModel();

                for (int i = 0; i < Headers.size(); i++) {
                    Modelo.addColumn(Headers.get(i).toString());
                }

                Object[] Row = new Object[Headers.size()];
                for (int i = 0; i < Campos.size(); i++) {
                    System.out.println("Campo: " + Campos.get(i).toString());
                }

                for (int i = 0; i < Campos.size() / Headers.size(); i++) {
                    for (int j = 0; j < Headers.size(); j++) {
                        Row[j] = Campos.get(j);
                    }
                    Modelo.addRow(Row);
                }

                jt_ARLV_tabla.setModel(Modelo);

            } catch (FileNotFoundException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(jd_Crear, "Elige un archivo de texto y una tabla de longitud Variable");
        }
    }//GEN-LAST:event_jButton6MouseClicked

    private void jpm_ARLV_SeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpm_ARLV_SeleccionarActionPerformed
        jt_ARLV_tabla.setColumnSelectionInterval(0, variable_variable.GetNumCampo() - 1);
        jpm_ARLV_Borrar_Registro.setEnabled(true);
    }//GEN-LAST:event_jpm_ARLV_SeleccionarActionPerformed

    private void jpm_ARLV_Borrar_RegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpm_ARLV_Borrar_RegistroActionPerformed
        if (jpm_ARLV_Borrar_Registro.isEnabled() && jt_ARLV_tabla.getValueAt(jt_ARLV_tabla.getSelectedRow(),
                jt_ARLV_tabla.getSelectedColumn()) != " ") {
            int seleccionado = jt_ARLV_tabla.getSelectedRow();
            variable_variable.getBorrados().add(Integer.toString(seleccionado));
            String direccion = "";
            direccion = variable_variable.getDireccion().substring(0, variable_variable.getDireccion().length() - 4);
            System.out.println(direccion);
            String Borrado = "./borradosvv/" + direccion + "borr" + ".txt";
            System.out.println(Borrado);
            File Archivo_b = null;

            Archivo_b = new File(Borrado);
            RandomAccessFile RAF2 = null;
            try {
                RAF2 = new RandomAccessFile(Archivo_b, "rw");
                RAF2.seek(0);
                if ((char) RAF2.readByte() == '$') {
                    RAF2.seek(RAF2.length() - 1);
                    RAF2.writeBytes(Integer.toString(seleccionado) + ";");
                } else {
                    RAF2.seek(RAF2.length());
                    RAF2.writeBytes(Integer.toString(seleccionado) + ";");
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            }

            for (int i = 0; i < jt_ARLV_tabla.getColumnCount(); i++) {
                jt_ARLV_tabla.setValueAt(" ", jt_ARLV_tabla.getSelectedRow(),
                        jt_ARLV_tabla.getSelectedColumn() + i);
            }
        } else {
            JOptionPane.showMessageDialog(jd_Crear, "Ese Registro Ya Ha Sido Borrado!");
        }
        jpm_ARLV_Borrar_Registro.setEnabled(false);
    }//GEN-LAST:event_jpm_ARLV_Borrar_RegistroActionPerformed

    private void jpm_ARLV_ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpm_ARLV_ModificarActionPerformed
        // TODO add your handling code here:
        String Campo = "";
        String Comparar = "";
        Campo = (jt_ARLV_tabla.getValueAt(jt_ARLV_tabla.getSelectedRow(), jt_ARLV_tabla.getSelectedColumn())).toString();
        int Lenght = Campo.length();
        char InicioCampo = Campo.charAt(0);

        String Direccion = variable_variable.getDireccion();
        File Archivo = null;
        Archivo = new File(Direccion);
        RandomAccessFile RAF = null;
        int ContadorCampo = 0;
        int Seek = 0;

        try {
            RAF = new RandomAccessFile(Archivo, "rw");

            for (int i = 0; i < RAF.length(); i++) {
                RAF.seek(i);
                char CharRevisar = (char) RAF.readByte();
                if (CharRevisar == InicioCampo) {
                    for (int j = 0; j < Campo.length(); j++) {
                        RAF.seek(i + j);
                        char CharRevisar2 = (char) RAF.readByte();
                        Comparar += CharRevisar2;
                    }
                    if (Comparar.equals(Campo)) {
                        Seek = i;
                        break;
                    } else {
                        Comparar = "";
                    }
                }
            }

            String ModificarCampo = JOptionPane.showInputDialog(jd_Crear, "Ingrese el " + jt_ARLV_tabla.getSelectedColumn());

            while (ModificarCampo.length() > Campo.length()) {
                JOptionPane.showMessageDialog(jd_Crear, "El dato que desea ingresar es muy grande");
                ModificarCampo = JOptionPane.showInputDialog(jd_Crear, "Ingrese el " + jt_ARLV_tabla.getSelectedColumn());
            }

            if (ModificarCampo.length() == Campo.length()) {
                RAF.seek(Seek);
                RAF.writeBytes(ModificarCampo);

                jt_ARLV_tabla.setValueAt(ModificarCampo, jt_ARLV_tabla.getSelectedRow(), jt_ARLV_tabla.getSelectedColumn());
            } else {
                for (int i = 0; i < Campo.length() - ModificarCampo.length(); i++) {
                    ModificarCampo += "-";
                }

                RAF.seek(Seek);
                RAF.writeBytes(ModificarCampo);

                jt_ARLV_tabla.setValueAt(ModificarCampo, jt_ARLV_tabla.getSelectedRow(), jt_ARLV_tabla.getSelectedColumn());
            }
            System.out.println("Campo = " + Campo);
            System.out.println("Comparar = " + Comparar);
            System.out.println("Seek= " + Seek);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jpm_ARLV_ModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElCaro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElCaro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElCaro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElCaro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElCaro().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton D;
    private javax.swing.JRadioButton I;
    private javax.swing.JRadioButton K;
    private javax.swing.ButtonGroup bg_ARLV_ManejoTabla;
    private javax.swing.ButtonGroup bg_ARLV_TablaIndices;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jb_ARLV_CrearTabla;
    private javax.swing.JButton jb_Agregar_Campo_Fijo;
    private javax.swing.JButton jb_Cargar_tabla_Fijo;
    private javax.swing.JButton jb_Crear_Tabla_Fijo;
    private javax.swing.JDialog jd_Crear;
    private javax.swing.JPopupMenu jpm_ARLF;
    private javax.swing.JMenuItem jpm_ARLF_Modificar;
    private javax.swing.JPopupMenu jpm_ARLV;
    private javax.swing.JMenuItem jpm_ARLV_Borrar_Registro;
    private javax.swing.JMenuItem jpm_ARLV_Modificar;
    private javax.swing.JMenuItem jpm_ARLV_Seleccionar;
    private javax.swing.JMenuItem jpm_borrar_registro_ARLF;
    private javax.swing.JMenuItem jpm_seleccionar_ARLF;
    private javax.swing.JRadioButton jrb_ARLV_Indices_No;
    private javax.swing.JRadioButton jrb_ARLV_Indices_Si;
    private javax.swing.JSpinner jsp_ARLF_LongitudCampos;
    private javax.swing.JSpinner jsp_ARLF_NumeroCampos;
    private javax.swing.JSpinner jsp_ARLV_NumeroCampos;
    private javax.swing.JTable jt_ARLF_Tabla;
    private javax.swing.JTextField jt_ARLV_Nombre;
    private javax.swing.JTable jt_ARLV_tabla;
    private javax.swing.JTextField nombre_arlf;
    // End of variables declaration//GEN-END:variables
    ARLF fijo_fijo = new ARLF();
    ARLV variable_variable = new ARLV();

    public void Agregard(String Registro, long Lenght, int indice) {
        if (variable_variable.getManejo() == 'D') {

            File Archivo = null;
            Archivo = new File(variable_variable.getDireccion());
            RandomAccessFile RAF = null;
            try {
                RAF = new RandomAccessFile(Archivo, "rw");
                RAF.seek(Lenght);
                RAF.writeBytes(Registro + "&");

            } catch (FileNotFoundException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (variable_variable.getManejo() == 'K') {
            File Archivo = null;
            Archivo = new File(variable_variable.getDireccion());
            RandomAccessFile RAF = null;
            try {
                RAF = new RandomAccessFile(Archivo, "rw");
                RAF.seek(Lenght);
                RAF.writeBytes(variable_variable.GetNombreColumna(indice) + "=" + Registro);

            } catch (FileNotFoundException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (variable_variable.getManejo() == 'I') {
            int t_campo = Registro.length();

            File Archivo = null;
            Archivo = new File(variable_variable.getDireccion());
            RandomAccessFile RAF = null;
            try {
                RAF = new RandomAccessFile(Archivo, "rw");
                RAF.seek(Lenght);
                if (Integer.toString(t_campo).length() == 3) {
                    RAF.writeBytes(t_campo + Registro);
                } else if (Integer.toString(t_campo).length() == 2) {
                    RAF.writeBytes("0" + t_campo + Registro);
                } else {
                    RAF.writeBytes("00" + t_campo + Registro);
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ElCaro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public static boolean ValidarAgregar(JTextField Campo) {
        Boolean Escribir = false;
        if (!Campo.getText().equals("")) {
            Escribir = true;
        }

        return Escribir;
    }
}
